// Code generated by MockGen. DO NOT EDIT.
// Source: mapper.go

// Package mock_mapper is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	document "person/internal/document"
	dto "person/internal/dto"
	reflect "reflect"
)

// MockMapper is a mock of Mapper interface
type MockMapper struct {
	ctrl     *gomock.Controller
	recorder *MockMapperMockRecorder
}

// MockMapperMockRecorder is the mock recorder for MockMapper
type MockMapperMockRecorder struct {
	mock *MockMapper
}

// NewMockMapper creates a new mock instance
func NewMockMapper(ctrl *gomock.Controller) *MockMapper {
	mock := &MockMapper{ctrl: ctrl}
	mock.recorder = &MockMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMapper) EXPECT() *MockMapperMockRecorder {
	return m.recorder
}

// DocumentToDto mocks base method
func (m *MockMapper) DocumentToDto(document document.Person) (dto.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DocumentToDto", document)
	ret0, _ := ret[0].(dto.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DocumentToDto indicates an expected call of DocumentToDto
func (mr *MockMapperMockRecorder) DocumentToDto(document interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DocumentToDto", reflect.TypeOf((*MockMapper)(nil).DocumentToDto), document)
}

// ListDocumentToListDto mocks base method
func (m *MockMapper) ListDocumentToListDto(document []document.Person) ([]dto.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDocumentToListDto", document)
	ret0, _ := ret[0].([]dto.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDocumentToListDto indicates an expected call of ListDocumentToListDto
func (mr *MockMapperMockRecorder) ListDocumentToListDto(document interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDocumentToListDto", reflect.TypeOf((*MockMapper)(nil).ListDocumentToListDto), document)
}

// DtoToDocument mocks base method
func (m *MockMapper) DtoToDocument(dto dto.Person) (document.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DtoToDocument", dto)
	ret0, _ := ret[0].(document.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DtoToDocument indicates an expected call of DtoToDocument
func (mr *MockMapperMockRecorder) DtoToDocument(dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DtoToDocument", reflect.TypeOf((*MockMapper)(nil).DtoToDocument), dto)
}
